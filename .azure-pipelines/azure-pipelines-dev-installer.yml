# Build phenix development installer on CentOS 7 from source tarball

# no continuous integration builds or pull requests
trigger: none
pr: none

resources:
  pipelines:
  - pipeline: source_tarball
    source: source_tarball
    trigger: true

jobs:
- job: Build_dev_installer
  pool:
    vmImage: ubuntu-20.04
  timeoutInMinutes: 360

  container:
    image: centos:7
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

  steps:

  # secrets for LBL
  - task: DownloadSecureFile@1
    name: ssh_key
    inputs:
      secureFile: id_rsa

  - task: DownloadSecureFile@1
    name: upload_key
    inputs:
      secureFile: phenix-lbl-04e6cb0d1bf7.json

  - task: DownloadSecureFile@1
    name: ssh_config
    inputs:
      secureFile: ssh.config

  # install dependencies
  - script: |
      /tmp/docker exec -t -u 0 ci-container \
      sh -c "yum install -y sudo"
    displayName: Set up sudo for CentOS

  - script: |
      set -xe
      sudo yum groupinstall -y 'Development Tools'
      sudo yum install -y \
        mesa-libGLU-devel \
        mesa-libGL-devel \
        openssh \
        openssl \
        tcsh \
        wget
    displayName: Install dependencies

  - script: |
      set -xe
      cd $(Pipeline.Workspace)
      wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
      bash Miniforge3-Linux-x86_64.sh -b -u -p $(Pipeline.Workspace)/miniforge
    displayName: Install conda

  # download source tarball
  - task: DownloadPipelineArtifact@2
    inputs:
      source: 'specific'
      project: '$(resources.pipeline.source_tarball.projectID)'
      pipeline: '$(resources.pipeline.source_tarball.pipelineID)'
      preferTriggeringPipeline: true
      allowPartiallySucceededBuilds: false
      allowFailedBuilds: false
      artifactName: phenix

  # decrypt and extract tarball
  - script: |
      set -xe
      source $(Pipeline.Workspace)/miniforge/etc/profile.d/conda.sh
      cd $(Pipeline.Workspace)
      openssl enc -d \
        -aes-256-cbc \
        -salt \
        -md sha256 \
        -iter 100000 \
        -pbkdf2 \
        -in ${SRC_DIR}/phenix.enc \
        -out phenix.tgz \
        -pass env:TARBALL_PASSWORD
      rm -f phenix.enc
      tar -xf phenix.tgz
      rm -f phenix.tgz
      mv phenix* phenix
    displayName: Extract tarball

  - script: |
      set -xe
      pwd
      ls
      ls $(Pipeline.Workspace)
      ls $(Pipeline.Workspace)/phenix
    displayName: debug
